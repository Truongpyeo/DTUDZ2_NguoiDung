{
  "backgroundColor": "#FFFFFF",
  "borderColor": "#E0DEDE",
  "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
  "borderWidth": "1",
  "bottomRow": 73,
  "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
  "defaultModel": "{\n  \"tips\": [\n    \"Pass data to this widget in the default model field\",\n    \"Access data in the javascript file using the appsmith.model variable\",\n    \"Create events in the widget and trigger them in the javascript file using appsmith.triggerEvent('eventName')\",\n    \"Access data in CSS as var(--appsmith-model-{property-name})\"\n  ]\n}",
  "dynamicBindingPathList": [
    {
      "key": "theme"
    },
    {
      "key": "borderRadius"
    },
    {
      "key": "boxShadow"
    }
  ],
  "dynamicHeight": "FIXED",
  "dynamicTriggerPathList": [
    {
      "key": "onResetClick"
    }
  ],
  "events": [
    "onResetClick"
  ],
  "isCanvas": false,
  "isLoading": false,
  "isSearchWildcard": true,
  "isVisible": true,
  "key": "nr3zi4eri3",
  "leftColumn": 0,
  "maxDynamicHeight": 9000,
  "minDynamicHeight": 4,
  "mobileBottomRow": 88,
  "mobileLeftColumn": 0,
  "mobileRightColumn": 15,
  "mobileTopRow": 58,
  "needsErrorInfo": false,
  "onResetClick": "{{showAlert('Successfully reset!!', '');}}",
  "originalBottomRow": 73,
  "originalTopRow": 58,
  "parentColumnSpace": 6.84375,
  "parentId": "0",
  "parentRowSpace": 10,
  "renderMode": "CANVAS",
  "rightColumn": 64,
  "srcDoc": {
    "css": ".app {\n  width: calc(1px * var(--appsmith-ui-width));\n  justify-content: center;\n  border-radius: 0px;\n  border: none;\n}\n.app .tip-container {\n  margin-bottom: 20px;\n}\n.app .tip-container h2 {\n  margin-bottom: 20px;\n  font-size: 16px;\n  font-weight: 700;\n}\n.app .tip-container .tip-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n}\n.app .tip-container .tip-header div {\n  color: #999;\n}\n.app .button-container {\n  text-align: right;\n}\n.app .button-container button {\n  margin: 0 10px;\n  border-radius: var(--appsmith-theme-borderRadius) !important;\n}\n.app .button-container button.primary {\n  background: var(--appsmith-theme-primaryColor) !important;\n}\n.app .button-container button.reset:not([disabled]) {\n  color: var(--appsmith-theme-primaryColor) !important;\n  border-color: var(--appsmith-theme-primaryColor) !important;\n}",
    "html": "<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>Alert Dashboard</title>\n\t\t<style>\n\t\t\tbody, html {\n\t\t\t\toverflow-x: hidden;\n\t\t\t\toverflow-Y: hidden;\n\t\t\t}\n\t\t\t* {\n\t\t\t\tmargin: 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}\n\n\t\t\tbody {\n\t\t\t\tfont-family: Arial, sans-serif;\n\t\t\t\tbackground: #f0f2f5;\n\t\t\t\tmin-height: 100vh;\n\t\t\t\tpadding: 20px;\n\t\t\t}\n\n\t\t.container {\n    display: flex;\n    flex-wrap: nowrap; /* Prevent wrapping */\n    gap: 15px;\n    padding: 10px;\n    overflow-x: auto; /* Enable horizontal scrolling */\n    -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */\n}\n\n\n\t\t\t.alert-box {\n\t\t\t\tmin-width: 150px; /* Chiều rộng tối thiểu */\n\t\t\t\tflex: 0 0 auto; /* Không co giãn, giữ kích thước */\n\t\t\t\tpadding: 15px;\n\t\t\t\tbackground: white;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tbox-shadow: 0 2px 10px rgba(0,0,0,0.1);\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\tcursor: pointer;\n\t\t\t\ttransition: all 0.3s ease;\n\t\t\t}\n\n\t\t\t/* Đáp ứng cho màn hình nhỏ */\n\t\t\t@media (max-width: 768px) {\n\t\t\t\t.container {\n\t\t\t\t\tpadding: 5px;\n\t\t\t\t}\n\n\t\t\t\t.alert-box {\n\t\t\t\t\tmin-width: 120px;\n\t\t\t\t\tpadding: 10px;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.alert-box:hover {\n\t\t\t\ttransform: translateY(-5px);\n\t\t\t\tbox-shadow: 0 5px 15px rgba(0,0,0,0.2);\n\t\t\t}\n\n\t\t\t.icon {\n\t\t\t\twidth: 40px;\n\t\t\t\theight: 40px;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\n\t\t\t.alert-box h3 {\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tcolor: #333;\n\t\t\t\twhite-space: nowrap; /* Ngăn text xuống dòng */\n\t\t\t}\n\n\t\t\t/* Màu gradient cho từng box */\n\t\t\t.current-location {\n\t\t\t\tbackground: linear-gradient(145deg, #fff, #ffe5e5);\n\t\t\t\tcolor: #ff4444;\n\t\t\t}\n\n\t\t\t.all-india {\n\t\t\t\tbackground: linear-gradient(145deg, #fff, #e5f1ff);\n\t\t\t\tcolor: #4285f4;\n\t\t\t}\n\n\t\t\t.state-wise {\n\t\t\t\tbackground: linear-gradient(145deg, #fff, #fff8e5);\n\t\t\t\tcolor: #fbbc05;\n\t\t\t}\n\n\t\t\t.forecast {\n\t\t\t\tbackground: linear-gradient(145deg, #fff, #e5ffe7);\n\t\t\t\tcolor: #34a853;\n\t\t\t}\n\n\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"container\">\n\t\t\t<div class=\"alert-box current-location\">\n\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t<svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n\t\t\t\t\t\t<path d=\"M12 21s-8-4.5-8-11a8 8 0 1 1 16 0c0 6.5-8 11-8 11z\"/>\n\t\t\t\t\t\t<circle cx=\"12\" cy=\"10\" r=\"3\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t\t<h3>CURRENT LOCATION</h3>\n\t\t\t</div>\n\n\t\t\t<div class=\"alert-box all-india\">\n\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t<svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n\t\t\t\t\t\t<circle cx=\"12\" cy=\"12\" r=\"10\"/>\n\t\t\t\t\t\t<path d=\"M12 2a15 15 0 0 1 4 10 15 15 0 0 1-4 10 15 15 0 0 1-4-10 15 15 0 0 1 4-10z\"/>\n\t\t\t\t\t\t<path d=\"M2 12h20\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t\t<h3>ALL INDIA</h3>\n\t\t\t</div>\n\n\t\t\t<div class=\"alert-box state-wise\">\n\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t<svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n\t\t\t\t\t\t<path d=\"M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5\"/>\n\t\t\t\t\t\t<path d=\"M2 12l10 5 10-5\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t\t<h3>STATE WISE</h3>\n\t\t\t</div>\n\n\t\t\t<div class=\"alert-box forecast\">\n\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t<svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n\t\t\t\t\t\t<path d=\"M12 2v2M12 20v2M4.93 4.93l1.41 1.41M17.66 17.66l1.41 1.41M2 12h2M20 12h2M6.34 17.66l-1.41 1.41M19.07 4.93l-1.41 1.41\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t\t<h3>FORECAST</h3>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>",
    "js": "import React from 'https://cdn.jsdelivr.net/npm/react@18.2.0/+esm';\nimport reactDom from 'https://cdn.jsdelivr.net/npm/react-dom@18.2.0/+esm';\nimport { Button, Card } from 'https://cdn.jsdelivr.net/npm/antd@5.11.1/+esm';\nimport Markdown from 'https://cdn.jsdelivr.net/npm/react-markdown@9.0.1/+esm';\nfunction App() {\n  const [currentIndex, setCurrentIndex] = React.useState(0);\n  const handleNext = () => {\n    setCurrentIndex(prevIndex => (prevIndex + 1) % appsmith.model.tips.length);\n  };\n  const handleReset = () => {\n    setCurrentIndex(0);\n    appsmith.triggerEvent(\"onResetClick\");\n  };\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"app\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tip-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tip-header\"\n  }, /*#__PURE__*/React.createElement(\"h2\", null, \"Custom Widget\"), /*#__PURE__*/React.createElement(\"div\", null, currentIndex + 1, \" / \", appsmith.model.tips.length, \"  \")), /*#__PURE__*/React.createElement(Markdown, null, appsmith.model.tips[currentIndex])), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"primary\",\n    onClick: handleNext,\n    type: \"primary\"\n  }, \"Next Tip\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"reset\",\n    disabled: currentIndex === 0,\n    onClick: handleReset\n  }, \"Reset\")));\n}\nappsmith.onReady(() => {\n  /*\n   * This handler function will get called when parent application is ready.\n   * Initialize your component here\n   * more info - https://docs.appsmith.com/reference/widgets/custom#onready\n   */\n  reactDom.render( /*#__PURE__*/React.createElement(App, null), document.getElementById(\"root\"));\n});"
  },
  "theme": "{{appsmith.theme}}",
  "topRow": 58,
  "type": "CUSTOM_WIDGET",
  "uncompiledSrcDoc": {
    "css": ".app {\n  width: calc(1px * var(--appsmith-ui-width));\n  justify-content: center;\n  border-radius: 0px;\n  border: none;\n  \n  .tip-container {\n    margin-bottom: 20px;\n\n    h2 {\n      margin-bottom: 20px;\n      font-size: 16px;\n      font-weight: 700;\n    }\n\n    .tip-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: baseline;\n\n      div {\n        color: #999;\n      }\n    }\n  }\n\t\n\t.button-container {\n      text-align: right;\n\n      button {\n        margin: 0 10px;\n        border-radius: var(--appsmith-theme-borderRadius) !important;\n\n        &.primary {\n          background: var(--appsmith-theme-primaryColor) !important;\n        }\n\n        &.reset:not([disabled]) {\n          color: var(--appsmith-theme-primaryColor) !important;\n          border-color: var(--appsmith-theme-primaryColor) !important;\n        }\n      }\n    }\n}\n",
    "html": "<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n\t\t<title>Alert Dashboard</title>\n\t\t<style>\n\t\t\tbody, html {\n\t\t\t\toverflow-x: hidden;\n\t\t\t\toverflow-Y: hidden;\n\t\t\t}\n\t\t\t* {\n\t\t\t\tmargin: 0;\n\t\t\t\tpadding: 0;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t}\n\n\t\t\tbody {\n\t\t\t\tfont-family: Arial, sans-serif;\n\t\t\t\tbackground: #f0f2f5;\n\t\t\t\tmin-height: 100vh;\n\t\t\t\tpadding: 20px;\n\t\t\t}\n\n\t\t.container {\n    display: flex;\n    flex-wrap: nowrap; /* Prevent wrapping */\n    gap: 15px;\n    padding: 10px;\n    overflow-x: auto; /* Enable horizontal scrolling */\n    -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */\n}\n\n\n\t\t\t.alert-box {\n\t\t\t\tmin-width: 150px; /* Chiều rộng tối thiểu */\n\t\t\t\tflex: 0 0 auto; /* Không co giãn, giữ kích thước */\n\t\t\t\tpadding: 15px;\n\t\t\t\tbackground: white;\n\t\t\t\tborder-radius: 10px;\n\t\t\t\tbox-shadow: 0 2px 10px rgba(0,0,0,0.1);\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\tcursor: pointer;\n\t\t\t\ttransition: all 0.3s ease;\n\t\t\t}\n\n\t\t\t/* Đáp ứng cho màn hình nhỏ */\n\t\t\t@media (max-width: 768px) {\n\t\t\t\t.container {\n\t\t\t\t\tpadding: 5px;\n\t\t\t\t}\n\n\t\t\t\t.alert-box {\n\t\t\t\t\tmin-width: 120px;\n\t\t\t\t\tpadding: 10px;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.alert-box:hover {\n\t\t\t\ttransform: translateY(-5px);\n\t\t\t\tbox-shadow: 0 5px 15px rgba(0,0,0,0.2);\n\t\t\t}\n\n\t\t\t.icon {\n\t\t\t\twidth: 40px;\n\t\t\t\theight: 40px;\n\t\t\t\tmargin-bottom: 10px;\n\t\t\t}\n\n\t\t\t.alert-box h3 {\n\t\t\t\ttext-align: center;\n\t\t\t\tfont-size: 14px;\n\t\t\t\tcolor: #333;\n\t\t\t\twhite-space: nowrap; /* Ngăn text xuống dòng */\n\t\t\t}\n\n\t\t\t/* Màu gradient cho từng box */\n\t\t\t.current-location {\n\t\t\t\tbackground: linear-gradient(145deg, #fff, #ffe5e5);\n\t\t\t\tcolor: #ff4444;\n\t\t\t}\n\n\t\t\t.all-india {\n\t\t\t\tbackground: linear-gradient(145deg, #fff, #e5f1ff);\n\t\t\t\tcolor: #4285f4;\n\t\t\t}\n\n\t\t\t.state-wise {\n\t\t\t\tbackground: linear-gradient(145deg, #fff, #fff8e5);\n\t\t\t\tcolor: #fbbc05;\n\t\t\t}\n\n\t\t\t.forecast {\n\t\t\t\tbackground: linear-gradient(145deg, #fff, #e5ffe7);\n\t\t\t\tcolor: #34a853;\n\t\t\t}\n\n\n\t\t</style>\n\t</head>\n\t<body>\n\t\t<div class=\"container\">\n\t\t\t<div class=\"alert-box current-location\">\n\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t<svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n\t\t\t\t\t\t<path d=\"M12 21s-8-4.5-8-11a8 8 0 1 1 16 0c0 6.5-8 11-8 11z\"/>\n\t\t\t\t\t\t<circle cx=\"12\" cy=\"10\" r=\"3\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t\t<h3>CURRENT LOCATION</h3>\n\t\t\t</div>\n\n\t\t\t<div class=\"alert-box all-india\">\n\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t<svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n\t\t\t\t\t\t<circle cx=\"12\" cy=\"12\" r=\"10\"/>\n\t\t\t\t\t\t<path d=\"M12 2a15 15 0 0 1 4 10 15 15 0 0 1-4 10 15 15 0 0 1-4-10 15 15 0 0 1 4-10z\"/>\n\t\t\t\t\t\t<path d=\"M2 12h20\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t\t<h3>ALL INDIA</h3>\n\t\t\t</div>\n\n\t\t\t<div class=\"alert-box state-wise\">\n\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t<svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n\t\t\t\t\t\t<path d=\"M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5\"/>\n\t\t\t\t\t\t<path d=\"M2 12l10 5 10-5\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t\t<h3>STATE WISE</h3>\n\t\t\t</div>\n\n\t\t\t<div class=\"alert-box forecast\">\n\t\t\t\t<div class=\"icon\">\n\t\t\t\t\t<svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n\t\t\t\t\t\t<path d=\"M12 2v2M12 20v2M4.93 4.93l1.41 1.41M17.66 17.66l1.41 1.41M2 12h2M20 12h2M6.34 17.66l-1.41 1.41M19.07 4.93l-1.41 1.41\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t\t<h3>FORECAST</h3>\n\t\t\t</div>\n\t\t</div>\n\t</body>\n</html>",
    "js": "import React from 'https://cdn.jsdelivr.net/npm/react@18.2.0/+esm'\nimport reactDom from 'https://cdn.jsdelivr.net/npm/react-dom@18.2.0/+esm'\nimport { Button, Card } from 'https://cdn.jsdelivr.net/npm/antd@5.11.1/+esm'\nimport Markdown from 'https://cdn.jsdelivr.net/npm/react-markdown@9.0.1/+esm';\n\nfunction App() {\n\tconst [currentIndex, setCurrentIndex] = React.useState(0);\n\n\tconst handleNext = () => {\n\t\tsetCurrentIndex((prevIndex) => (prevIndex + 1) % appsmith.model.tips.length);\n\t};\n\n\tconst handleReset = () => {\n\t\tsetCurrentIndex(0);\n\t\tappsmith.triggerEvent(\"onResetClick\");\n\t};\n\n\treturn (\n\t\t<Card className=\"app\">\n\t\t\t<div className=\"tip-container\">\n\t\t\t\t<div className=\"tip-header\">\n\t\t\t\t\t<h2>Custom Widget</h2>\n\t\t\t\t\t<div>{currentIndex + 1} / {appsmith.model.tips.length}\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Markdown>{appsmith.model.tips[currentIndex]}</Markdown>\n\t\t\t</div>\n\t\t\t<div className=\"button-container\">\n\t\t\t\t<Button className=\"primary\" onClick={handleNext} type=\"primary\">Next Tip</Button>\n\t\t\t\t<Button className=\"reset\" disabled={currentIndex === 0} onClick={handleReset}>Reset</Button>\n\t\t\t</div>\n\t</Card>\n);\n}\n\nappsmith.onReady(() => {\n\t/*\n\t * This handler function will get called when parent application is ready.\n\t * Initialize your component here\n\t * more info - https://docs.appsmith.com/reference/widgets/custom#onready\n\t */\n\treactDom.render(<App />, document.getElementById(\"root\"));\n});"
  },
  "version": 1,
  "widgetId": "leq2ui74l9",
  "widgetName": "Custom2"
}